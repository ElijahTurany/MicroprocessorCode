
Lab2Debug.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000184  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000178  08000184  08000184  00010184  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002fc  08000304  00010304  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002fc  080002fc  00010304  2**0
                  CONTENTS
  4 .ARM          00000000  080002fc  080002fc  00010304  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002fc  08000304  00010304  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002fc  080002fc  000102fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000300  08000300  00010300  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010304  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  00010304  2**0
                  CONTENTS
 10 .bss          00000020  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000020  20000020  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010304  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00010334  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000555  00000000  00000000  00010377  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000001ea  00000000  00000000  000108cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000088  00000000  00000000  00010ab8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000057  00000000  00000000  00010b40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  0001d050  00000000  00000000  00010b97  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00000e27  00000000  00000000  0002dbe7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000a1c15  00000000  00000000  0002ea0e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  0000010c  00000000  00000000  000d0624  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 000000ab  00000000  00000000  000d0730  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000184 <__do_global_dtors_aux>:
 8000184:	b510      	push	{r4, lr}
 8000186:	4c05      	ldr	r4, [pc, #20]	; (800019c <__do_global_dtors_aux+0x18>)
 8000188:	7823      	ldrb	r3, [r4, #0]
 800018a:	b933      	cbnz	r3, 800019a <__do_global_dtors_aux+0x16>
 800018c:	4b04      	ldr	r3, [pc, #16]	; (80001a0 <__do_global_dtors_aux+0x1c>)
 800018e:	b113      	cbz	r3, 8000196 <__do_global_dtors_aux+0x12>
 8000190:	4804      	ldr	r0, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x20>)
 8000192:	f3af 8000 	nop.w
 8000196:	2301      	movs	r3, #1
 8000198:	7023      	strb	r3, [r4, #0]
 800019a:	bd10      	pop	{r4, pc}
 800019c:	20000000 	.word	0x20000000
 80001a0:	00000000 	.word	0x00000000
 80001a4:	080002e4 	.word	0x080002e4

080001a8 <frame_dummy>:
 80001a8:	b508      	push	{r3, lr}
 80001aa:	4b03      	ldr	r3, [pc, #12]	; (80001b8 <frame_dummy+0x10>)
 80001ac:	b11b      	cbz	r3, 80001b6 <frame_dummy+0xe>
 80001ae:	4903      	ldr	r1, [pc, #12]	; (80001bc <frame_dummy+0x14>)
 80001b0:	4803      	ldr	r0, [pc, #12]	; (80001c0 <frame_dummy+0x18>)
 80001b2:	f3af 8000 	nop.w
 80001b6:	bd08      	pop	{r3, pc}
 80001b8:	00000000 	.word	0x00000000
 80001bc:	20000004 	.word	0x20000004
 80001c0:	080002e4 	.word	0x080002e4

080001c4 <button_init>:
{
/*set PA5 low*/
	GPIOA->ODR &=~(1U<<10);
}
void button_init(void)
{
 80001c4:	b480      	push	{r7}
 80001c6:	af00      	add	r7, sp, #0
/*Enable clock access to PORTC*/
	RCC->AHB2ENR |=GPIOCEN;
 80001c8:	4b0b      	ldr	r3, [pc, #44]	; (80001f8 <button_init+0x34>)
 80001ca:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80001cc:	4a0a      	ldr	r2, [pc, #40]	; (80001f8 <button_init+0x34>)
 80001ce:	f043 0304 	orr.w	r3, r3, #4
 80001d2:	64d3      	str	r3, [r2, #76]	; 0x4c
/*Set PC13 as an input pin*/
	GPIOC->MODER &= ~(3U<<26);
 80001d4:	4b09      	ldr	r3, [pc, #36]	; (80001fc <button_init+0x38>)
 80001d6:	681b      	ldr	r3, [r3, #0]
 80001d8:	4a08      	ldr	r2, [pc, #32]	; (80001fc <button_init+0x38>)
 80001da:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 80001de:	6013      	str	r3, [r2, #0]
	GPIOC->MODER &= ~(3U<<27);
 80001e0:	4b06      	ldr	r3, [pc, #24]	; (80001fc <button_init+0x38>)
 80001e2:	681b      	ldr	r3, [r3, #0]
 80001e4:	4a05      	ldr	r2, [pc, #20]	; (80001fc <button_init+0x38>)
 80001e6:	f023 53c0 	bic.w	r3, r3, #402653184	; 0x18000000
 80001ea:	6013      	str	r3, [r2, #0]
}
 80001ec:	bf00      	nop
 80001ee:	46bd      	mov	sp, r7
 80001f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001f4:	4770      	bx	lr
 80001f6:	bf00      	nop
 80001f8:	40021000 	.word	0x40021000
 80001fc:	48000800 	.word	0x48000800

08000200 <main>:
//	temp = num1+num2;
//	return temp;
//}

int main(void)
{
 8000200:	b580      	push	{r7, lr}
 8000202:	b082      	sub	sp, #8
 8000204:	af00      	add	r7, sp, #0

	button_init();
 8000206:	f7ff ffdd 	bl	80001c4 <button_init>

	//sum = add(10,20);

	 while(1)
	 {
		 if(GPIOC->IDR & BTN_PIN)
 800020a:	4b0c      	ldr	r3, [pc, #48]	; (800023c <main+0x3c>)
 800020c:	691b      	ldr	r3, [r3, #16]
 800020e:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8000212:	2b00      	cmp	r3, #0
 8000214:	d003      	beq.n	800021e <main+0x1e>
		 {
			 btn_state = 0; //because of active low
 8000216:	4b0a      	ldr	r3, [pc, #40]	; (8000240 <main+0x40>)
 8000218:	2200      	movs	r2, #0
 800021a:	701a      	strb	r2, [r3, #0]
 800021c:	e002      	b.n	8000224 <main+0x24>
		 }
		 else
		 {
			 btn_state = 1 ;
 800021e:	4b08      	ldr	r3, [pc, #32]	; (8000240 <main+0x40>)
 8000220:	2201      	movs	r2, #1
 8000222:	701a      	strb	r2, [r3, #0]
		 }
		 for (int i = 0 ; i < 90000 ; i++){}
 8000224:	2300      	movs	r3, #0
 8000226:	607b      	str	r3, [r7, #4]
 8000228:	e002      	b.n	8000230 <main+0x30>
 800022a:	687b      	ldr	r3, [r7, #4]
 800022c:	3301      	adds	r3, #1
 800022e:	607b      	str	r3, [r7, #4]
 8000230:	687b      	ldr	r3, [r7, #4]
 8000232:	4a04      	ldr	r2, [pc, #16]	; (8000244 <main+0x44>)
 8000234:	4293      	cmp	r3, r2
 8000236:	ddf8      	ble.n	800022a <main+0x2a>
		 if(GPIOC->IDR & BTN_PIN)
 8000238:	e7e7      	b.n	800020a <main+0xa>
 800023a:	bf00      	nop
 800023c:	48000800 	.word	0x48000800
 8000240:	2000001c 	.word	0x2000001c
 8000244:	00015f8f 	.word	0x00015f8f

08000248 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000248:	480d      	ldr	r0, [pc, #52]	; (8000280 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800024a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800024c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000250:	480c      	ldr	r0, [pc, #48]	; (8000284 <LoopForever+0x6>)
  ldr r1, =_edata
 8000252:	490d      	ldr	r1, [pc, #52]	; (8000288 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000254:	4a0d      	ldr	r2, [pc, #52]	; (800028c <LoopForever+0xe>)
  movs r3, #0
 8000256:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000258:	e002      	b.n	8000260 <LoopCopyDataInit>

0800025a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800025a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800025c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800025e:	3304      	adds	r3, #4

08000260 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000260:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000262:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000264:	d3f9      	bcc.n	800025a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000266:	4a0a      	ldr	r2, [pc, #40]	; (8000290 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000268:	4c0a      	ldr	r4, [pc, #40]	; (8000294 <LoopForever+0x16>)
  movs r3, #0
 800026a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800026c:	e001      	b.n	8000272 <LoopFillZerobss>

0800026e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800026e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000270:	3204      	adds	r2, #4

08000272 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000272:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000274:	d3fb      	bcc.n	800026e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000276:	f000 f811 	bl	800029c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800027a:	f7ff ffc1 	bl	8000200 <main>

0800027e <LoopForever>:

LoopForever:
  b LoopForever
 800027e:	e7fe      	b.n	800027e <LoopForever>
  ldr   r0, =_estack
 8000280:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000284:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000288:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800028c:	08000304 	.word	0x08000304
  ldr r2, =_sbss
 8000290:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000294:	20000020 	.word	0x20000020

08000298 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000298:	e7fe      	b.n	8000298 <ADC1_2_IRQHandler>
	...

0800029c <__libc_init_array>:
 800029c:	b570      	push	{r4, r5, r6, lr}
 800029e:	4d0d      	ldr	r5, [pc, #52]	; (80002d4 <__libc_init_array+0x38>)
 80002a0:	4c0d      	ldr	r4, [pc, #52]	; (80002d8 <__libc_init_array+0x3c>)
 80002a2:	1b64      	subs	r4, r4, r5
 80002a4:	10a4      	asrs	r4, r4, #2
 80002a6:	2600      	movs	r6, #0
 80002a8:	42a6      	cmp	r6, r4
 80002aa:	d109      	bne.n	80002c0 <__libc_init_array+0x24>
 80002ac:	4d0b      	ldr	r5, [pc, #44]	; (80002dc <__libc_init_array+0x40>)
 80002ae:	4c0c      	ldr	r4, [pc, #48]	; (80002e0 <__libc_init_array+0x44>)
 80002b0:	f000 f818 	bl	80002e4 <_init>
 80002b4:	1b64      	subs	r4, r4, r5
 80002b6:	10a4      	asrs	r4, r4, #2
 80002b8:	2600      	movs	r6, #0
 80002ba:	42a6      	cmp	r6, r4
 80002bc:	d105      	bne.n	80002ca <__libc_init_array+0x2e>
 80002be:	bd70      	pop	{r4, r5, r6, pc}
 80002c0:	f855 3b04 	ldr.w	r3, [r5], #4
 80002c4:	4798      	blx	r3
 80002c6:	3601      	adds	r6, #1
 80002c8:	e7ee      	b.n	80002a8 <__libc_init_array+0xc>
 80002ca:	f855 3b04 	ldr.w	r3, [r5], #4
 80002ce:	4798      	blx	r3
 80002d0:	3601      	adds	r6, #1
 80002d2:	e7f2      	b.n	80002ba <__libc_init_array+0x1e>
 80002d4:	080002fc 	.word	0x080002fc
 80002d8:	080002fc 	.word	0x080002fc
 80002dc:	080002fc 	.word	0x080002fc
 80002e0:	08000300 	.word	0x08000300

080002e4 <_init>:
 80002e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002e6:	bf00      	nop
 80002e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002ea:	bc08      	pop	{r3}
 80002ec:	469e      	mov	lr, r3
 80002ee:	4770      	bx	lr

080002f0 <_fini>:
 80002f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002f2:	bf00      	nop
 80002f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002f6:	bc08      	pop	{r3}
 80002f8:	469e      	mov	lr, r3
 80002fa:	4770      	bx	lr
